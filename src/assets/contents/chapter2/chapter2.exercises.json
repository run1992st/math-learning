{
  "basic": [
    {
      "title": "Exercise 1",
      "subtitle": "Draw the point in the plane and the arrow corresponding to the point (2, −2]."
    },
    {
      "title": "Exercise 2",
      "subtitle": "Draw the dinosaur with the dots connected by constructing a Polygon object with the dino_vectors as its vertices."
    },
    {
      "title": "Exercise 3",
      "subtitle": "Draw the vectors (x,x**2) for x in the range from x = −10 to x = 11) as points (dots) using the draw function. What is the result?"
    },
    {
      "title": "Exercise 4",
      "subtitle": "Write a function translate(translation, vectors) that takes a translation vector and a list of input vectors, and returns a list of the input vectors all translated by the translation vector. For instance, translate ((1,1), [(0,0), (0,1,), (−3,−3)]) should return [(1,1),(1,2),(−2, −2)]."
    },
    {
      "title": "Exercise 5",
      "subtitle": "Write a function using vector addition to show 100 simultaneous and non-overlapping copies of the dinosaur. This shows the power of computer graphics; imagine how tedious it would be to specify all 2,100 coordinate pairs by hand!"
    },
    {
      "title": "Exercise 6",
      "subtitle": "Write a Python function distance(v1,v2) that returns the distance between two input vectors. (Note that the subtract function from the previous exercise already gives the displacement.) Write another Python function perimeter(vectors) that takes a list of vectors as an argument and returns the sum of distances from each vector to the next, including the distance from the last vector to the first. What is the perimeter of the dinosaur defined by dino_vectors ?"
    }
  ],
  "trigonmetry": [
    {
      "title": "Exercise 1",
      "subtitle": "Suppose I travel 8.5 units from the origin at an angle of 125°, measured counterclockwise from the positive x-axis. Given that sin(125°) = 0.819 and cos(125°) = -0.574, what are my final coordinates? Draw a picture to show the angle and path traveled."
    },
    {
      "title": "Exercise 2",
      "subtitle": "The following list comprehension creates 1,000 points in polar coordinates: <br/><code>[(cos(5*x*pi/500.0), 2*pi*x/1000.0) for x in range(0,1000)]</code> In Python code, convert these to Cartesian coordinates and connect them in a closed loop with line segments to draw a picture.",
      "html": true
    },
    {
      "title": "Exercise 3",
      "subtitle": "Create a rotate(angle, vectors) function that takes an array of input vectors in Cartesian coordinates and rotates those by the specified angle (counterclockwise or clockwise, according to whether the angle is positive or negative)."
    },
    {
      "title": "Exercise 4",
      "subtitle": "Create a function regular_polygon(n) that returns Cartesian coordinates for the vertices of a regular n -sided polygon (that is, having all angles and side lengths equal). For instance, polygon(7) produces vectors defining the following heptagon:"
    },
    {
      "title": "Exercise 5",
      "subtitle": "What is the result of first translating the dinosaur by the vector (8, 8) and then rotating it by 5π/3? Is the result the same as rotating and then translating?"
    }
  ]
}
